{"ast":null,"code":"var _jsxFileName = \"/Users/baggeun-yeong/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n//import { Label, Note } from \"./types\"; // Import the Label type from the appropriate module\n//import { dummyNotesList } from \"./constant\"; // Import the dummyNotesList from the appropriate module\nimport './hooksExercise.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [label, setLabel] = useState('');\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  const toggleFavorite = id => {\n    setNotes(notes.map(note => note.id === id ? {\n      ...note,\n      isFavorite: !note.isFavorite\n    } : note));\n  };\n  const handleEditNote = id => {\n    setEditingNoteId(id);\n  };\n  const handleCreateNote = () => {\n    if (!title || !content || !label) return; // Basic validation\n    const newNote = {\n      id: Date.now(),\n      title,\n      content,\n      label,\n      isFavorite: false\n    };\n    setNotes([...notes, newNote]);\n    setTitle('');\n    setContent('');\n    setLabel('');\n  };\n  const handleDeleteNote = id => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n  const handleSaveNote = (id, newTitle, newContent) => {\n    setNotes(notes.map(note => note.id === id ? {\n      ...note,\n      title: newTitle,\n      content: newContent\n    } : note));\n    setEditingNoteId(null); // Exit edit mode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Note Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Note Content\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: label,\n        onChange: e => setLabel(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select your label--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"personal\",\n          children: \"Personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"work\",\n          children: \"Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"study\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateNote,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        children: editingNoteId === note.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: note.title,\n            onChange: e => note.title = e.target.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            defaultValue: note.content,\n            onChange: e => note.content = e.target.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveNote(note.id, note.title, note.content),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingNoteId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"note-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `favorite-heart ${note.isFavorite ? 'liked' : ''}`,\n              onClick: () => toggleFavorite(note.id),\n              children: \"\\u2764\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDeleteNote(note.id),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: note.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"editButton\",\n            onClick: () => handleEditNote(note.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Go5jNt4dJ4d7OX7Rz0QHRAXFhU4=\");\n_c = App;\nconst handleEditNote = id => {\n  setEditingNoteId(id);\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","notes","setNotes","title","setTitle","content","setContent","label","setLabel","editingNoteId","setEditingNoteId","toggleFavorite","id","map","note","isFavorite","handleEditNote","handleCreateNote","newNote","Date","now","handleDeleteNote","filter","handleSaveNote","newTitle","newContent","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","defaultValue","_c","$RefreshReg$"],"sources":["/Users/baggeun-yeong/my-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n//import { Label, Note } from \"./types\"; // Import the Label type from the appropriate module\n//import { dummyNotesList } from \"./constant\"; // Import the dummyNotesList from the appropriate module\nimport './hooksExercise.tsx';\n\ninterface Stickynote {\n  id: number;\n  title: string;\n  content: string;\n  label: string;\n  isFavorite: boolean;\n}\n\nconst App: React.FC = () => {\n  const [notes, setNotes] = useState<Stickynote[]>([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [label, setLabel] = useState('');\n  const [editingNoteId, setEditingNoteId] = useState<number | null>(null);\n\n  const toggleFavorite = (id: number) => {\n    setNotes(notes.map(note =>\n      note.id === id ? { ...note, isFavorite: !note.isFavorite } : note\n    ));\n  };\n\n  const handleEditNote = (id: number) => {\n    setEditingNoteId(id);\n  };\n\n  const handleCreateNote = () => {\n    if (!title || !content || !label) return; // Basic validation\n    const newNote: Stickynote = {\n      id: Date.now(),\n      title,\n      content,\n      label,\n      isFavorite: false,\n    };\n    setNotes([...notes, newNote]);\n    setTitle('');\n    setContent('');\n    setLabel('');\n  };\n\n  const handleDeleteNote = (id: number) => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n\n  const handleSaveNote = (id: number, newTitle: string, newContent: string) => {\n    setNotes(notes.map(note =>\n      note.id === id ? { ...note, title: newTitle, content: newContent } : note\n    ));\n    setEditingNoteId(null); // Exit edit mode\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"note-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Note Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Note Content\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n        />\n        <select value={label} onChange={(e) => setLabel(e.target.value)}>\n          <option value=\"\">--Select your label--</option>\n          <option value=\"personal\">Personal</option>\n          <option value=\"work\">Work</option>\n          <option value=\"study\">Study</option>\n          <option value=\"other\">Other</option>\n        </select>\n        <button onClick={handleCreateNote}>Submit</button>\n      </div>\n\n\n      <div className=\"notes-grid\">\n        {notes.map(note => (\n          <div key={note.id} className=\"note-item\">\n            {editingNoteId === note.id ? (\n              <>\n                <input\n                  type=\"text\"\n                  defaultValue={note.title}\n                  onChange={(e) => note.title = e.target.value}\n                />\n                <textarea\n                  defaultValue={note.content}\n                  onChange={(e) => note.content = e.target.value}\n                />\n                <button onClick={() => handleSaveNote(note.id, note.title, note.content)}>Save</button>\n                <button onClick={() => setEditingNoteId(null)}>Cancel</button>\n              </>\n            ) : (\n              <>\n                <div className=\"note-header\">\n                  <h3>{note.title}</h3>\n                  <button\n                    className={`favorite-heart ${note.isFavorite ? 'liked' : ''}`}\n                    onClick={() => toggleFavorite(note.id)}\n                  >\n                    &#x2764;\n                  </button>\n                  <button className=\"delete-btn\" onClick={() => handleDeleteNote(note.id)}>x</button>\n                </div>\n                <p>{note.content}</p>\n                <small>{note.label}</small>\n                <button id=\"editButton\" onClick={() => handleEditNote(note.id)}>Edit</button>\n              </>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst handleEditNote = (id: number) => {\n  setEditingNoteId(id);\n};\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}