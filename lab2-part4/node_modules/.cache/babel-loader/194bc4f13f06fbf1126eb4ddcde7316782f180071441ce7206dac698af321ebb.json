{"ast":null,"code":"var _jsxFileName = \"/Users/baggeun-yeong/my-app/src/hooksExercise.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThemeContext, themes } from \"./ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ClickCounter() {\n  _s();\n  const [count, setCount] = useState(0);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground,\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      style: {\n        background: themes.foreground,\n        color: theme.background\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n// Wrapper component to provide context\n_s(ClickCounter, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = ClickCounter;\nfunction ToggleTheme() {\n  _s2();\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \" Toggle Theme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClickCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s2(ToggleTheme, \"XUkQGtkba25k8FAF8WwW2uStAco=\");\n_c2 = ToggleTheme;\nexport default ToggleTheme;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickCounter\");\n$RefreshReg$(_c2, \"ToggleTheme\");","map":{"version":3,"names":["React","useState","useEffect","ThemeContext","themes","jsxDEV","_jsxDEV","ClickCounter","_s","count","setCount","handleClick","document","title","style","background","theme","color","foreground","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","ToggleTheme","_s2","currentTheme","setCurrentTheme","light","toggleTheme","dark","Provider","value","_c2","$RefreshReg$"],"sources":["/Users/baggeun-yeong/my-app/src/hooksExercise.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { ThemeContext, themes } from \"./ThemeContext\";\n\nexport function ClickCounter() {\n const [count, setCount] = useState(0);\n\n const handleClick = () => {\n   setCount(count + 1);\n };\n\n useEffect(() => {\n   document.title = `You clicked ${count} times`;\n }, [count]);\n\n return (\n    <div\n     style={{\n       background: theme.background,\n       color: theme.foreground,\n       padding: \"20px\",\n     }}\n   >\n     <p>You clicked {count} times </p>\n     <button\n       onClick={() => setCount(count + 1)}\n       style={{ background: themes.foreground, color: theme.background }}\n     >\n       Click me\n     </button>\n   </div>\n );\n}\n\n// Wrapper component to provide context\nfunction ToggleTheme() {\n    const [currentTheme, setCurrentTheme] = useState(themes.light);\n   \n    const toggleTheme = () => {\n      setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n    };\n   \n    return (\n      <ThemeContext.Provider value={currentTheme}>\n        <button onClick={toggleTheme}> Toggle Theme </button>\n        <ClickCounter />\n      </ThemeContext.Provider>\n    );\n   }\n   \n   export default ToggleTheme;\n   \n   "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,YAAY,EAAEC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACC,KAAK,GAAG,eAAeJ,KAAK,QAAQ;EAC/C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACGH,OAAA;IACCQ,KAAK,EAAE;MACLC,UAAU,EAAEC,KAAK,CAACD,UAAU;MAC5BE,KAAK,EAAED,KAAK,CAACE,UAAU;MACvBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEFd,OAAA;MAAAc,QAAA,GAAG,cAAY,EAACX,KAAK,EAAC,SAAO;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjClB,OAAA;MACEmB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MACnCK,KAAK,EAAE;QAAEC,UAAU,EAAEX,MAAM,CAACc,UAAU;QAAED,KAAK,EAAED,KAAK,CAACD;MAAW,CAAE;MAAAK,QAAA,EACnE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAET;;AAEA;AAAAhB,EAAA,CA9BgBD,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA+B5B,SAASoB,WAAWA,CAAA,EAAG;EAAAC,GAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAACG,MAAM,CAAC2B,KAAK,CAAC;EAE9D,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,eAAe,CAACD,YAAY,KAAKzB,MAAM,CAAC2B,KAAK,GAAG3B,MAAM,CAAC6B,IAAI,GAAG7B,MAAM,CAAC2B,KAAK,CAAC;EAC7E,CAAC;EAED,oBACEzB,OAAA,CAACH,YAAY,CAAC+B,QAAQ;IAACC,KAAK,EAAEN,YAAa;IAAAT,QAAA,gBACzCd,OAAA;MAAQmB,OAAO,EAAEO,WAAY;MAAAZ,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDlB,OAAA,CAACC,YAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B;AAACI,GAAA,CAbKD,WAAW;AAAAS,GAAA,GAAXT,WAAW;AAejB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}